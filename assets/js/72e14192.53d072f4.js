"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7239],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>l});var n=r(7294),a=r(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:r,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:r},t)}},5488:(e,t,r)=>{r.d(t,{Z:()=>m});var n=r(7462),a=r(7294),o=r(6010),l=r(2389),i=r(7392),u=r(7094),s=r(2466);const c="tabList__CuJ",d="tabItem_LNqP";function p(e){var t,r;const{lazy:l,block:p,defaultValue:m,values:f,groupId:b,className:v}=e,y=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=f?f:y.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),h=(0,i.l)(g,((e,t)=>e.value===t.value));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===m?m:null!=(t=null!=m?m:null==(r=y.find((e=>e.props.default)))?void 0:r.props.value)?t:y[0].props.value;if(null!==k&&!g.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+g.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:O}=(0,u.U)(),[T,E]=(0,a.useState)(k),N=[],{blockElementScrollPositionUntilNextRender:j}=(0,s.o5)();if(null!=b){const e=w[b];null!=e&&e!==T&&g.some((t=>t.value===e))&&E(e)}const x=e=>{const t=e.currentTarget,r=N.indexOf(t),n=g[r].value;n!==T&&(j(t),E(n),null!=b&&O(b,String(n)))},P=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{var n;const t=N.indexOf(e.currentTarget)+1;r=null!=(n=N[t])?n:N[0];break}case"ArrowLeft":{var a;const t=N.indexOf(e.currentTarget)-1;r=null!=(a=N[t])?a:N[N.length-1];break}}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},v)},g.map((e=>{let{value:t,label:r,attributes:l}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>N.push(e),onKeyDown:P,onFocus:x,onClick:x},l,{className:(0,o.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":T===t})}),null!=r?r:t)}))),l?(0,a.cloneElement)(y.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},y.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function m(e){const t=(0,l.Z)();return a.createElement(p,(0,n.Z)({key:String(t)},e))}},4181:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var n=r(7462),a=(r(7294),r(3905)),o=r(5488),l=r(5162);const i={sidebar_position:1},u="Quick Start",s={unversionedId:"quick-start",id:"quick-start",title:"Quick Start",description:"Model Forge is a library that automates model generation for use in tests.",source:"@site/docs/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/model-forge/docs/quick-start",draft:!1,editUrl:"https://github.com/HelloCuriosity/model-forge/edit/main/website/docs/quick-start.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/model-forge/docs/category/getting-started"}},c={},d=[{value:"Get Model Forge",id:"get-model-forge",level:4},{value:"Define your model",id:"define-your-model",level:4},{value:"Generate your model",id:"generate-your-model",level:4},{value:"Advanced topics",id:"advanced-topics",level:4}],p={toc:d};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start"},"Quick Start"),(0,a.kt)("p",null,"Model Forge is a library that automates model generation for use in tests."),(0,a.kt)("h4",{id:"get-model-forge"},"Get Model Forge"),(0,a.kt)("p",null,"Add the Model Forge dependency to your project."),(0,a.kt)(o.Z,{groupId:"dependency",mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"kotlin",label:"Kotlin",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'dependencies {\n    testImplementation("io.github.hellocuriosity:model-forge:0.9.0")\n}\n'))),(0,a.kt)(l.Z,{value:"Groovy",label:"Groovy",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dependencies {\n    testImplementation 'io.github.hellocuriosity:model-forge:0.9.0'\n}\n")))),(0,a.kt)("h4",{id:"define-your-model"},"Define your model"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"data class Employee(\n    val id: Long,\n    val name: String,\n    val dob: Instant,\n)\n")),(0,a.kt)("h4",{id:"generate-your-model"},"Generate your model"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"val forge = ModelForge()\nval employee = forge.build<Employee>()\n")),(0,a.kt)("h4",{id:"advanced-topics"},"Advanced topics"),(0,a.kt)("p",null,"Check out the ",(0,a.kt)("a",{parentName:"p",href:"category/getting-started"},"Getting Started")," guides for more configuration options and information about\nadvanced features. An\noverview of supported types and there behavoir can be found in the ",(0,a.kt)("a",{parentName:"p",href:"category/supported-types"},"Supported Types")," section."))}m.isMDXComponent=!0}}]);