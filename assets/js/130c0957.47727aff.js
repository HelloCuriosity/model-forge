"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[41],{2113:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(4848),t=r(8453);const i={sidebar_position:3},d="Custom Providers",s={id:"getting-started/custom-providers",title:"Custom Providers",description:"While Model Forge aims to fully automate model generation, you may run into an",source:"@site/docs/getting-started/custom-providers.md",sourceDirName:"getting-started",slug:"/getting-started/custom-providers",permalink:"/model-forge/docs/getting-started/custom-providers",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/custom-providers.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Generating Models",permalink:"/model-forge/docs/getting-started/generate-models"},next:{title:"Supported Types",permalink:"/model-forge/docs/category/supported-types"}},a={},l=[{value:"Define your provider",id:"define-your-provider",level:4},{value:"Add your provider to the forge",id:"add-your-provider-to-the-forge",level:4},{value:"Inline your provider(s)",id:"inline-your-providers",level:4}];function c(e){const o={code:"code",h1:"h1",h4:"h4",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"custom-providers",children:"Custom Providers"}),"\n",(0,n.jsx)(o.p,{children:"While Model Forge aims to fully automate model generation, you may run into an\ninstance where you need to customize your data. This is easily achievable by\ndefining a custom provider and adding it to the forge."}),"\n",(0,n.jsx)(o.h4,{id:"define-your-provider",children:"Define your provider"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-kotlin",children:'val employeeProvider: Provider<Employee> = Provider {\n    Employee(\n        id = 15L,\n        name = "Josh",\n        dob = Instant.ofEpochMilli(1315260000000)\n    )\n}\n'})}),"\n",(0,n.jsx)(o.h4,{id:"add-your-provider-to-the-forge",children:"Add your provider to the forge"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-kotlin",children:"forge.addProvider(employeeProvider)\n"})}),"\n",(0,n.jsx)(o.h4,{id:"inline-your-providers",children:"Inline your provider(s)"}),"\n",(0,n.jsx)(o.p,{children:"Alternatively you can add your forgery providers inline"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-kotlin",children:'\nval forge = ModelForge().apply {\n    addProvider {\n        Employee(\n            id = 2L,\n            name = "Hendrik",\n            dob = Instant.ofEpochMilli(1574486400000)\n        )\n    }\n}\nval employee by forgery<Employee>(forge)\n\n'})})]})}function u(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,o,r)=>{r.d(o,{R:()=>d,x:()=>s});var n=r(6540);const t={},i=n.createContext(t);function d(e){const o=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),n.createElement(i.Provider,{value:o},e.children)}}}]);