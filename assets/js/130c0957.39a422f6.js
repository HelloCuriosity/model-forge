"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>m});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var d=o.createContext({}),s=function(e){var r=o.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},p=function(e){var r=s(e.components);return o.createElement(d.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},c=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(t),m=n,y=c["".concat(d,".").concat(m)]||c[m]||u[m]||i;return t?o.createElement(y,a(a({ref:r},p),{},{components:t})):o.createElement(y,a({ref:r},p))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,a=new Array(i);a[0]=c;var l={};for(var d in r)hasOwnProperty.call(r,d)&&(l[d]=r[d]);l.originalType=e,l.mdxType="string"==typeof e?e:n,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3565:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var o=t(7462),n=(t(7294),t(3905));const i={sidebar_position:3},a="Custom Providers",l={unversionedId:"getting-started/custom-providers",id:"getting-started/custom-providers",title:"Custom Providers",description:"While Model Forge aims to fully automate model generation, you may run into an",source:"@site/docs/getting-started/custom-providers.md",sourceDirName:"getting-started",slug:"/getting-started/custom-providers",permalink:"/model-forge/docs/getting-started/custom-providers",draft:!1,editUrl:"https://github.com/HelloCuriosity/model-forge/edit/main/website/docs/getting-started/custom-providers.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Generating Models",permalink:"/model-forge/docs/getting-started/generate-models"},next:{title:"Supported Types",permalink:"/model-forge/docs/category/supported-types"}},d={},s=[{value:"Define your provider",id:"define-your-provider",level:4},{value:"Add your provider to the forge",id:"add-your-provider-to-the-forge",level:4},{value:"Inline your provider(s)",id:"inline-your-providers",level:4}],p={toc:s};function u(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"custom-providers"},"Custom Providers"),(0,n.kt)("p",null,"While Model Forge aims to fully automate model generation, you may run into an\ninstance where you need to customize your data. This is easily achievable by\ndefining a custom provider and adding it to the forge."),(0,n.kt)("h4",{id:"define-your-provider"},"Define your provider"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},'val employeeProvider: Provider<Employee> = Provider {\n    Employee(\n        id = 15L,\n        name = "Josh",\n        dob = Instant.ofEpochMilli(1315260000000)\n    )\n}\n')),(0,n.kt)("h4",{id:"add-your-provider-to-the-forge"},"Add your provider to the forge"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},"forge.addProvider(employeeProvider)\n")),(0,n.kt)("h4",{id:"inline-your-providers"},"Inline your provider(s)"),(0,n.kt)("p",null,"Alternatively you can add your forgery providers inline"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},'\nval forge = ModelForge().apply {\n    addProvider {\n        Employee(\n            id = 2L,\n            name = "Hendrik",\n            dob = Instant.ofEpochMilli(1574486400000)\n        )\n    }\n}\nval employee by forgery<Employee>(forge)\n\n')))}u.isMDXComponent=!0}}]);